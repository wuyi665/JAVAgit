package Package;
/*
类包括:成员变量  构造方法   成员方法  构造代码块   内部类

内部类:一个类中有一部分是独立的个体,且这个个体单独出现没有意义,在这个类中再定义的一个类
     外部类要访问内部类的变量需要先创造对象
     内部类分类:成员内部类  静态内部类  局部内部类  匿名内部类(重点掌握)
     成员内部类可以定义方法获取对象,也可以outer.inner oi=new outer().new inner();
     成员内部类中方法有重名变量时,this.变量名表示内部类变量  outer.this.变量名表示外部类变量

     静态内部类只能访问外部类的静态变量和静态方法
     静态内部类只能访问外部类的静态变量和静态方法,要访问非静态的要创建外部类的对象
     outer.inner oi=new outer.inner();

     局部内部类就是定义在方法中的类,类似于方法中的局部变量
     无法直接被使用,需要在定义的方法中创建对象才能被使用
     它可以访问外部类的成员变量和方法中的局部变量

     !!!!!匿名内部类:隐藏了格式的内部类
     new 类名或接口名(){
     重写方法
     };
     作用:实现接口功能/继承关系   创建了对象
     举例:例如需要一个类实现接口的功能/类的继承,我们需要这个类先使用接口/继承父类之后重写方法才能调用接口/类的方法
         但有了匿名内部类可以直接创建一个有这样功能的对象,这样在一些方法形参为接口时可以直接代入简洁代码
 */
public class Instruction2 {
}
