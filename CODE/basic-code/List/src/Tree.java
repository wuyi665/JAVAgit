/*
节点Node:父节点和子节点,每一个节点中都有数据和三个节点地址值
        根节点为最顶层的节点
        每一个节点的子节点的个数称为度,二叉树说明度<=2
        树高为总层数
二叉树有不同的遍历方式
二叉查找/排序树:数据左小右大,不存在一样的数据
为提高查询效率:构建平衡二叉树(任意节点左右子树高度差不超过1),当不符合条件时左旋右旋
        旋转的四种情况:左左(一次左旋)左右(局部左旋再右旋)右右(一次右旋)右左(局部右旋再左旋)
        红黑树:hashmap中链表的结构(不是高度平衡的有自己的红黑规则)
 */
public class Tree {
    public static void main(String[] args) {

    }
}
